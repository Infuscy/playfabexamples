local flow = require "ludobits.m.flow"
local user_data = require "example.playfab.user_data"
local navigate = require "example.navigate"

local playfab = require "playfab_defold.playfab"
local clientapi = require "playfab.client_api.ClientApi"
local LoginWithPlayFabRequest = require "playfab.client_api.datatype.LoginWithPlayFabRequest"

local dirtylarry = require "dirtylarry/dirtylarry"

function init(self)
	msg.post(".", "acquire_input_focus")
	gui.set_text(gui.get_node("username/content"), "britzl")
	gui.set_text(gui.get_node("password/content"), "qwerty")
	self.username = ""
	self.password = ""
end

function final(self)
	msg.post(".", "release_input_focus")
end


function on_input(self, action_id, action)
	self.username = dirtylarry:input("username", action_id, action, gui.KEYBOARD_TYPE_DEFAULT, "Username...")
	self.password = dirtylarry:input("password", action_id, action, gui.KEYBOARD_TYPE_PASSWORD, "Password...")
	
	dirtylarry:hit("back", action_id, action, navigate.startmenu)
	dirtylarry:button("login", action_id, action, function ()
		navigate.show_spinner()
		flow.start(function()
			local request = LoginWithPlayFabRequest.create(playfab.settings.title_id, self.username, self.password)
			local response, error = clientapi.LoginWithPlayFab.flow(request)
			if error then
				navigate.show_popup(response and response.errorMessage or "Something went wrong")
				return
			end
			local response, error = user_data.on_login()
			if error then
				navigate.show_popup(response and response.errorMessage or "Something went wrong")
				return
			end
			navigate.startmenu()
		end)
	end)
end

function update(self, dt)
	flow.update()
end

function on_message(self, message_id, message, sender)
	flow.on_message(message_id, message, sender)
end
	
function on_reload(self)
    -- Add input-handling code here
    -- Remove this function if not needed
end
